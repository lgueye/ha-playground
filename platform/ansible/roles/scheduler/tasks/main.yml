- name: create current revision dir {{ platform_home_dir }}
  file: state='directory' path="{{ platform_home_dir }}"

# unlink, re-link jar
- name: unlink {{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.jar older revision
  file: state='absent' dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.jar
  ignore_errors: 'yes'

- name: link {{ backend_name }}-{{ backend_role }}.jar to new revision
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}.jar dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.jar

# unlink, update, re-link logback.xml
- name: unlink {{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}-logback.xml
  file: state='absent' dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}-logback.xml
  ignore_errors: 'yes'

- name: interpolate {{ backend_name }}-{{ backend_role }} logback config
  template: src=logback.xml.j2 dest={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}-logback.xml

- name: link {{ backend_name }}-{{ backend_role }}-logback.xml
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}-logback.xml dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}-logback.xml

# unlink, update, re-link {{ backend_role }}.yaml
- name: unlink {{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.yaml
  file: state='absent' dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.yaml
  ignore_errors: 'yes'

- name: interpolate {{ backend_name }}-{{ backend_role }} yaml config
  template: src=backend.yaml.j2 dest={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}.yaml

- name: link {{ backend_name }}-{{ backend_role }}.yaml
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}.yaml dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.yaml

# unlink, update, re-link {{ backend_role }}.xml (when backend_role == server)
- name: unlink {{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.xml
  file: state='absent' dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.xml
  ignore_errors: 'yes'
  when: "{{ backend_role }}" == 'server'

- name: interpolate {{ backend_name }} hazelcast config
  template: src={{ backend_name }}-{{ backend_role }}.xml.j2 dest={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}.xml
  when: "{{ backend_role }}" == 'server'

- name: link {{ backend_name }}-{{ backend_role }}.xml
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend_name }}-{{ backend_role }}.xml dest={{ platform_home_dir }}/{{ backend_name }}-{{ backend_role }}.xml
  when: "{{ backend_role }}" == 'server'

# update {{ backend_role }}.service
- name: extrapolate {{ backend_name }}.service
  template: src={{ backend_name }}-{{ backend_role }}.service.j2 dest=/etc/systemd/system/{{ backend_name }}-{{ backend_role }}.service

# reload systemd
- name: "reload systemd"
  command: systemctl daemon-reload

# stop
- name: stop {{ backend_name }} systemd service
  service: name="{{ backend_name }}-{{ backend_role }}" state='stopped'
  ignore_errors: 'yes'

# start
- name: enable and start {{ backend_name }}-{{ backend_role }}.service
  service: name={{ backend_name }}-{{ backend_role }}.service enabled='yes' state='restarted'
