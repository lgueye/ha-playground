# stop
- name: stop {{ backend }} systemd service
  service: name="{{ backend }}-server" state='stopped'
  ignore_errors: 'yes'

- name: create current revision dir {{ platform_home_dir }}
  file: state='directory' path="{{ platform_home_dir }}"

# unlink, re-link jar
- name: unlink {{ platform_home_dir }}/{{ backend }}-server.jar older revision
  file: state='absent' dest={{ platform_home_dir }}/{{ backend }}-server.jar
  ignore_errors: 'yes'

- name: link {{ backend }}-server.jar to new revision
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend }}-server.jar dest={{ platform_home_dir }}/{{ backend }}-server.jar

# unlink, update, re-link logback.xml
- name: unlink {{ platform_home_dir }}/{{ backend }}-logback.xml
  file: state='absent' dest={{ platform_home_dir }}/{{ backend }}-logback.xml
  ignore_errors: 'yes'

- name: interpolate {{ backend }} logback config
  template: src=logback.xml.j2 dest={{ platform_deploy_home_dir }}/{{ backend }}-logback.xml

- name: link {{ backend }}-logback.xml
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend }}-logback.xml dest={{ platform_home_dir }}/{{ backend }}-logback.xml

# unlink, update, re-link server.properties
- name: unlink {{ platform_home_dir }}/{{ backend }}-server.properties
  file: state='absent' dest={{ platform_home_dir }}/{{ backend }}-server.properties
  ignore_errors: 'yes'

- name: interpolate {{ backend }} properties config
  template: src={{ backend }}-server.properties.j2 dest={{ platform_deploy_home_dir }}/{{ backend }}-server.properties

- name: link {{ backend }}-server.properties
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend }}-server.properties dest={{ platform_home_dir }}/{{ backend }}-server.properties

# unlink, update, re-link server.xml
- name: unlink {{ platform_home_dir }}/{{ backend }}-server.xml
  file: state='absent' dest={{ platform_home_dir }}/{{ backend }}-server.xml
  ignore_errors: 'yes'

- name: interpolate {{ backend }} properties config
  template: src={{ backend }}-server.xml.j2 dest={{ platform_deploy_home_dir }}/{{ backend }}-server.xml

- name: link {{ backend }}-server.xml
  file: state='link' src={{ platform_deploy_home_dir }}/{{ backend }}-server.xml dest={{ platform_home_dir }}/{{ backend }}-server.xml

# update server.service
- name: extrapolate {{ backend }}.service
  template: src={{ backend }}-server.service.j2 dest=/etc/systemd/system/{{ backend }}-server.service

# reload systemd
- name: "reload systemd"
  command: systemctl daemon-reload

# start
- name: enable and start {{ backend }}-server.service
  service: name={{ backend }}-server.service enabled='yes' state='restarted'

# wait for ports to be available
- name: wait for port {{ hazelcast_ports.gossip }} to be available
  wait_for: port={{ hazelcast_ports.gossip }} delay=1 timeout={{ service_startup_timeout }}

- name: wait for port {{ hazelcast_ports.admin }} to be available
  wait_for: port={{ hazelcast_ports.admin }} delay=1 timeout={{ service_startup_timeout }}
