---

# add nodes to /etc/hosts
- name: 'extrapolate hosts.j2 to /etc/hosts'
  template: src='hosts.j2' dest='/etc/hosts'

# configure discovery plugin
- name: 'extrapolate rabbitmq.conf.j2 to /etc/rabbitmq/rabbitmq.conf'
  template: src='rabbitmq.conf.j2' dest='/etc/rabbitmq/rabbitmq.conf'

# configure cluster cookie
- name: 'extrapolate .erlang.cookie.j2 to /var/lib/rabbitmq/.erlang.cookie'
  template: src='.erlang.cookie.j2' dest='/var/lib/rabbitmq/.erlang.cookie'

- name: 'enabling plugins (management, consul discovery)'
  rabbitmq_plugin: names=rabbitmq_management,rabbitmq_peer_discovery_consul state=enabled

# configure ha mode
- name: 'configure ha mode (all nodes participate in HA mode and all exchanges are replicated/synced)'
  rabbitmq_policy:
    name: HA
    pattern: .*
  args:
    tags:
      ha-mode: all
      ha-sync-mode: automatic
  ignore_errors: yes

# user
- rabbitmq_user:
    user: "{{ rabbitmq.user }}"
    password: "{{ rabbitmq.password }}"
    permissions:
      - vhost: /
        configure_priv: .*
        read_priv: .*
        write_priv: .*
    state: present
  ignore_errors: yes

- name: 'ensuring that the RabbitMQ service is restarted'
  service: name=rabbitmq-server state=restarted enabled=yes

- name: 'performing rabbitmqctl stop_app on node'
  shell: "rabbitmqctl stop_app"

- name: 'performing rabbitmqctl reset on node'
  shell: "rabbitmqctl reset"

- name: 'performing rabbitmqctl start_app on node'
  shell: "rabbitmqctl start_app"


